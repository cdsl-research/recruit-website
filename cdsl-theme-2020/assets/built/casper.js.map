{"version":3,"sources":["jquery.bgswitcher.js","jquery.fitvids.js","gallery-card.js","infinite-scroll.js","sticky-nav-title.js"],"names":["$","loadedImages","slice","Array","prototype","toString","Object","corners","backgroundProperties","BgSwitcher","el","this","$el","index","config","extend","defaultConfig","_setupBackgroundElement","_listenToResize","fn","bgswitcher","args","arguments","instanceKey","keys","instance","each","data","dispatch","apply","bgSwitcher","one","call","setConfig","Error","random","shuffle","refresh","setImages","images","imageList","constructor","ImageList","setSwitchHandler","switchHandler","proxy","getBuiltInSwitchHandler","type","switchHandlers","effect","_prepareSwitching","start","_timerID","setTimeout","interval","stop","clearTimeout","toggle","reset","next","max","count","loop","switching","prev","select","started","_createSwitchableElement","$switchable","destroy","_stopListeningToResize","remove","$bg","removeAttr","removeData","_adjustRectangle","corner","i","length","offset","position","copiedStyles","top","left","width","innerWidth","height","innerHeight","css","document","createElement","zIndex","parseInt","overflow","_copyBackgroundStyles","tagName","prepend","before","clone","margin","border","appendTo","prop","copiedStyle","backgroundPosition","undefined","join","that","_resizeHandler","window","on","off","url","duration","easing","fade","animate","opacity","blind","clip","slide","drop","hide","defineEffect","name","createImagesBySequence","preload","isSequenceable","base","min","push","replace","path","Image","src","j","t","original","Math","floor","get","jQuery","fitVids","options","settings","customSelector","ignore","getElementById","head","getElementsByTagName","div","innerHTML","appendChild","childNodes","selectors","ignoreList","$allVideos","find","not","$this","parents","toLowerCase","parent","isNaN","attr","aspectRatio","videoName","_count","wrap","Zepto","addEventListener","querySelectorAll","forEach","image","container","closest","ratio","attributes","value","style","flex","nextElement","querySelector","feedElement","buffer","ticking","loading","lastScrollY","scrollY","lastWindowHeight","lastDocumentHeight","documentElement","scrollHeight","onScroll","passive","onResize","requestTick","onPageLoad","status","removeEventListener","response","item","importNode","resNextElement","href","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestAnimationFrame","Casper","stickyNavTitle","nav","navSelector","title","titleSelector","update","getBoundingClientRect","offsetHeight","classList","add","activeClass"],"mappings":"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","file":"casper.js","sourcesContent":["/*!\n * jQuery.BgSwitcher\n *\n * @version  0.4.3\n * @author   rewish <rewish.org@gmail.com>\n * @license  MIT License (https://github.com/rewish/jquery-bgswitcher/blob/master/LICENSE.md)\n * @link     https://github.com/rewish/jquery-bgswitcher\n */\n(function($) {\n  'use strict';\n\n  var loadedImages = {},\n\n      slice = Array.prototype.slice,\n      toString = Object.prototype.toString,\n\n      corners = ['Top', 'Right', 'Bottom', 'Left'],\n      backgroundProperties = [\n        'Attachment', 'Color', 'Image', 'Repeat',\n        'Position', 'Size', 'Clip', 'Origin'\n      ];\n\n  $.fn.bgswitcher = function() {\n    var args = arguments,\n        instanceKey = BgSwitcher.keys.instance;\n\n    return this.each(function() {\n      var instance = $.data(this, instanceKey);\n\n      if (!instance) {\n        instance = new BgSwitcher(this);\n        $.data(this, instanceKey, instance);\n      }\n\n      instance.dispatch.apply(instance, args);\n    });\n  };\n\n  // Backward Compatibility\n  $.fn.bgSwitcher = $.fn.bgswitcher;\n\n  /**\n   * BgSwitcher\n   *\n   * @param {HTMLElement} el\n   * @constructor\n   */\n  function BgSwitcher(el) {\n    this.$el = $(el);\n    this.index = 0;\n    this.config = $.extend({}, BgSwitcher.defaultConfig);\n\n    this._setupBackgroundElement();\n    this._listenToResize();\n  }\n\n  $.extend(BgSwitcher.prototype, {\n    /**\n     * Dispatch\n     *\n     * @param {string|Array} one\n     */\n    dispatch: function(one) {\n      switch (toString.call(one)) {\n        case '[object Object]':\n          this.setConfig(one);\n          break;\n        case '[object String]':\n          this[one].apply(this, slice.call(arguments, 1));\n          break;\n        default:\n          throw new Error('Please specify a Object or String');\n      }\n    },\n\n    /**\n     * Set config\n     *\n     * @param {Object} config\n     */\n    setConfig: function(config) {\n      this.config = $.extend(this.config, config);\n\n      if (typeof this.config.random !== 'undefined') {\n        this.config.shuffle = this.config.random;\n      }\n\n      this.refresh();\n    },\n\n    /**\n     * Set images\n     *\n     * @param {Array} images\n     */\n    setImages: function(images) {\n      this.imageList = new this.constructor.ImageList(images);\n\n      if (this.config.shuffle) {\n        this.imageList.shuffle();\n      }\n    },\n\n    /**\n     * Set switch handler\n     *\n     * @param {Function} fn\n     */\n    setSwitchHandler: function(fn) {\n      this.switchHandler = $.proxy(fn, this);\n    },\n\n    /**\n     * Default switch handler\n     *\n     * @param {string} type\n     * @returns {Function}\n     */\n    getBuiltInSwitchHandler: function(type) {\n      return this.constructor.switchHandlers[type || this.config.effect];\n    },\n\n    /**\n     * Refresh\n     */\n    refresh: function() {\n      this.setImages(this.config.images);\n      this.setSwitchHandler(this.getBuiltInSwitchHandler());\n      this._prepareSwitching();\n\n      if (this.config.start) {\n        this.start();\n      }\n    },\n\n    /**\n     * Start switching\n     */\n    start: function() {\n      if (!this._timerID) {\n        this._timerID = setTimeout($.proxy(this, 'next'), this.config.interval);\n      }\n    },\n\n    /**\n     * Stop switching\n     */\n    stop: function() {\n      if (this._timerID) {\n        clearTimeout(this._timerID);\n        this._timerID = null;\n      }\n    },\n\n    /**\n     * Toggle between start/stop\n     */\n    toggle: function() {\n      if (this._timerID) {\n        this.stop();\n      } else {\n        this.start();\n      }\n    },\n\n    /**\n     * Reset switching\n     */\n    reset: function() {\n      this.index = 0;\n      this._prepareSwitching();\n    },\n\n    /**\n     * Go to next switching\n     */\n    next: function() {\n      var max = this.imageList.count();\n\n      if (!this.config.loop && this.index + 1 === max) {\n        return;\n      }\n\n      if (++this.index === max) {\n        this.index = 0;\n      }\n\n      this.switching();\n    },\n\n    /**\n     * Go to previous switching\n     */\n    prev: function() {\n      if (!this.config.loop && this.index === 0) {\n        return;\n      }\n\n      if (--this.index === -1) {\n        this.index = this.imageList.count() - 1;\n      }\n\n      this.switching();\n    },\n\n    /**\n     * Select the switching at index\n     *\n     * @param {number} index\n     */\n    select: function(index) {\n      if (index === -1) {\n        index = this.imageList.count() - 1;\n      }\n\n      this.index = index;\n      this.switching();\n    },\n\n    /**\n     * Switching the background image\n     */\n    switching: function() {\n      var started = !!this._timerID;\n\n      if (started) {\n        this.stop();\n      }\n\n      this._createSwitchableElement();\n      this._prepareSwitching();\n      this.switchHandler(this.$switchable);\n\n      if (started) {\n        this.start();\n      }\n    },\n\n    /**\n     * Destroy...\n     */\n    destroy: function() {\n      this.stop();\n      this._stopListeningToResize();\n\n      if (this.$switchable) {\n        this.$switchable.stop();\n        this.$switchable.remove();\n        this.$switchable = null;\n      }\n\n      if (this.$bg) {\n        this.$bg.remove();\n        this.$bg = null;\n      }\n\n      this.$el.removeAttr('style');\n      this.$el.removeData(this.constructor.keys.instance);\n      this.$el = null;\n    },\n\n    /**\n     * Adjust rectangle\n     */\n    _adjustRectangle: function() {\n      var corner,\n          i = 0,\n          length = corners.length,\n          offset = this.$el.position(),\n          copiedStyles = {\n            top: offset.top,\n            left: offset.left,\n            width: this.$el.innerWidth(),\n            height: this.$el.innerHeight()\n          };\n\n      for (; i < length; i++) {\n        corner = corners[i];\n        copiedStyles['margin' + corner] = this.$el.css('margin' + corner);\n        copiedStyles['border' + corner] = this.$el.css('border' + corner);\n      }\n\n      this.$bg.css(copiedStyles);\n    },\n\n    /**\n     * Setup background element\n     */\n    _setupBackgroundElement: function() {\n      this.$bg = $(document.createElement('div'));\n      this.$bg.css({\n        position: 'absolute',\n        zIndex: (parseInt(this.$el.css('zIndex'), 10) || 0) - 1,\n        overflow: 'hidden'\n      });\n\n      this._copyBackgroundStyles();\n      this._adjustRectangle();\n\n      if (this.$el[0].tagName === 'BODY') {\n        this.$el.prepend(this.$bg);\n      } else {\n        this.$el.before(this.$bg);\n        this.$el.css('background', 'none');\n      }\n    },\n\n    /**\n     * Create switchable element\n     */\n    _createSwitchableElement: function() {\n      if (this.$switchable) {\n        this.$switchable.remove();\n      }\n\n      this.$switchable = this.$bg.clone();\n      this.$switchable.css({top: 0, left: 0, margin: 0, border: 'none'});\n      this.$switchable.appendTo(this.$bg);\n    },\n\n    /**\n     * Copy background styles\n     */\n    _copyBackgroundStyles: function () {\n      var prop,\n          copiedStyle = {},\n          i = 0,\n          length = backgroundProperties.length,\n          backgroundPosition = 'backgroundPosition';\n\n      for (; i < length; i++) {\n        prop = 'background' + backgroundProperties[i];\n        copiedStyle[prop] = this.$el.css(prop);\n      }\n\n      // For IE<=9\n      if (copiedStyle[backgroundPosition] === undefined) {\n        copiedStyle[backgroundPosition] = [\n          this.$el.css(backgroundPosition + 'X'),\n          this.$el.css(backgroundPosition + 'Y')\n        ].join(' ');\n      }\n\n      this.$bg.css(copiedStyle);\n    },\n\n    /**\n     * Listen to the resize event\n     */\n    _listenToResize: function() {\n      var that = this;\n      this._resizeHandler = function() {\n        that._adjustRectangle();\n      };\n      $(window).on('resize', this._resizeHandler);\n    },\n\n    /**\n     * Stop listening to the resize event\n     */\n    _stopListeningToResize: function() {\n      $(window).off('resize', this._resizeHandler);\n      this._resizeHandler = null;\n    },\n\n    /**\n     * Prepare the Switching\n     */\n    _prepareSwitching: function() {\n      this.$bg.css('backgroundImage', this.imageList.url(this.index));\n    }\n  });\n\n  /**\n   * Data Keys\n   * @type {Object}\n   */\n  BgSwitcher.keys = {\n    instance: 'bgSwitcher'\n  };\n\n  /**\n   * Default Config\n   * @type {Object}\n   */\n  BgSwitcher.defaultConfig = {\n    images: [],\n    interval: 5000,\n    start: true,\n    loop: true,\n    shuffle: false,\n    effect: 'fade',\n    duration: 1000,\n    easing: 'swing'\n  };\n\n  /**\n   * Built-In switch handlers (effects)\n   * @type {Object}\n   */\n  BgSwitcher.switchHandlers = {\n    fade: function($el) {\n      $el.animate({opacity: 0}, this.config.duration, this.config.easing);\n    },\n\n    blind: function($el) {\n      $el.animate({height: 0}, this.config.duration, this.config.easing);\n    },\n\n    clip: function($el) {\n      $el.animate({\n        top: parseInt($el.css('top'), 10) + $el.height() / 2,\n        height: 0\n      }, this.config.duration, this.config.easing);\n    },\n\n    slide: function($el) {\n      $el.animate({top: -$el.height()}, this.config.duration, this.config.easing);\n    },\n\n    drop: function($el) {\n      $el.animate({\n        left: -$el.width(),\n        opacity: 0\n      }, this.config.duration, this.config.easing);\n    },\n\n    hide: function($el) {\n      $el.hide();\n    }\n  };\n\n  /**\n   * Define effect\n   *\n   * @param {String} name\n   * @param {Function} fn\n   */\n  BgSwitcher.defineEffect = function(name, fn) {\n    this.switchHandlers[name] = fn;\n  };\n\n  /**\n   * BgSwitcher.ImageList\n   *\n   * @param {Array} images\n   * @constructor\n   */\n  BgSwitcher.ImageList = function(images) {\n    this.images = images;\n    this.createImagesBySequence();\n    this.preload();\n  };\n\n  $.extend(BgSwitcher.ImageList.prototype, {\n    /**\n     * Images is sequenceable\n     *\n     * @returns {boolean}\n     */\n    isSequenceable: function() {\n      return typeof this.images[0] === 'string' &&\n          typeof this.images[1] === 'number' &&\n          typeof this.images[2] === 'number';\n    },\n\n    /**\n     * Create an images by sequence\n     */\n    createImagesBySequence: function() {\n      if (!this.isSequenceable()) {\n        return;\n      }\n\n      var images = [],\n          base = this.images[0],\n          min = this.images[1],\n          max = this.images[2];\n\n      do {\n        images.push(base.replace(/\\.\\w+$/, min + '$&'));\n      } while (++min <= max);\n\n      this.images = images;\n    },\n\n    /**\n     * Preload an images\n     */\n    preload: function() {\n      var path,\n          length = this.images.length,\n          i = 0;\n\n      for (; i < length; i++) {\n        path = this.images[i];\n        if (!loadedImages[path]) {\n          loadedImages[path] = new Image();\n          loadedImages[path].src = path;\n        }\n      }\n    },\n\n    /**\n     * Shuffle an images\n     */\n    shuffle: function() {\n      var j, t,\n          i = this.images.length,\n          original = this.images.join();\n\n      if (!i) {\n        return;\n      }\n\n      while (i) {\n        j = Math.floor(Math.random() * i);\n        t = this.images[--i];\n        this.images[i] = this.images[j];\n        this.images[j] = t;\n      }\n\n      if (this.images.join() === original) {\n        this.shuffle();\n      }\n    },\n\n    /**\n     * Get the image from index\n     *\n     * @param {number} index\n     * @returns {string}\n     */\n    get: function(index) {\n      return this.images[index];\n    },\n\n    /**\n     * Get the URL with function of CSS\n     *\n     * @param {number} index\n     * @returns {string}\n     */\n    url: function(index) {\n      return 'url(' + this.get(index) + ')';\n    },\n\n    /**\n     * Count of images\n     *\n     * @returns {number}\n     */\n    count: function() {\n      return this.images.length;\n    }\n  });\n\n  $.BgSwitcher = BgSwitcher;\n}(jQuery));\n","/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* eslint-env browser */\n\n/**\n * Gallery card support\n * Used on any individual post/page\n *\n * Detects when a gallery card has been used and applies sizing to make sure\n * the display matches what is seen in the editor.\n */\n\n(function (window, document) {\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\n        var images = document.querySelectorAll('.kg-gallery-image img');\n        images.forEach(function (image) {\n            var container = image.closest('.kg-gallery-image');\n            var width = image.attributes.width.value;\n            var height = image.attributes.height.value;\n            var ratio = width / height;\n            container.style.flex = ratio + ' 1 0%';\n        });\n    };\n\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\n})(window, document);\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n","/* eslint-env browser */\n\n/**\n * Nav/Title replacement\n * Used on invividual post pages, displays the post title in place of the nav\n * bar when scrolling past the title\n *\n * Usage:\n * ```\n * Casper.stickyTitle({\n *     navSelector: '.site-nav-main',\n *     titleSelector: '.post-full-title',\n *     activeClass: 'nav-post-title-active'\n * });\n * ```\n */\n\n(function (window, document) {\n    // set up Casper as a global object\n    if (!window.Casper) {\n        window.Casper = {};\n    }\n\n    window.Casper.stickyNavTitle = function stickyNavTitle(options) {\n        var nav = document.querySelector(options.navSelector);\n        var title = document.querySelector(options.titleSelector);\n\n        var lastScrollY = window.scrollY;\n        var ticking = false;\n\n        function onScroll() {\n            lastScrollY = window.scrollY;\n            requestTick();\n        }\n\n        function requestTick() {\n            if (!ticking) {\n                requestAnimationFrame(update);\n            }\n            ticking = true;\n        }\n\n        function update() {\n            var trigger = title.getBoundingClientRect().top + window.scrollY;\n            var triggerOffset = title.offsetHeight + 35;\n\n            // show/hide post title\n            if (lastScrollY >= trigger + triggerOffset) {\n                nav.classList.add(options.activeClass);\n            } else {\n                nav.classList.remove(options.activeClass);\n            }\n\n            ticking = false;\n        }\n\n        window.addEventListener('scroll', onScroll, {passive: true});\n\n        update();\n    };\n})(window, document);\n"]}